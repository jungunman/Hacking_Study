
#FTZ Level 1
hint) -Level2 권한에 setuid가 걸린 파일을 찾는다.

#FTZ Level 1 풀이 과정)
ls -al ->
여러 숨겨진 파일과 일반 파일중에 hint를 읽으면 위와 같은 힌트를 얻을 수 있다.
find 를 이용해 찾으란 소리같다.
find 명령어를 기억해보면 다양한 조건으로 검색할 수 있는데 그중 user와 perm 옵션이 적당해보인다
id level2 ->
uid=3002(level2) gid=3002(level2) groups=3002(level2)
3002 숫자의 아이디를 가지고 있으니, 그것으로 검색해보자.
find / -perm -4000 -user 3002 2> /dev/null ->
/bin/ExecuteMe
가서 실행해보니 level2의 실행으로 하나의 명령만 실행시켜주겠다는 스크립트가 시작된다.
my-pass 와 chmod를 쓸 수 없다고 명시하는 것보니, 곤란했다.
/etc/passwd 는 읽을 수있어도 비밀번호는 x로 저장되고 실제 비밀번호는 encoding 되서 /etc/shadow에 저장되는 것을 알고 있다.
/etc/shadow는 root 권한만 읽을 수 있으니, level2 의 권한을 얻는다 해도 볼 수 없다.
계속 실행시켜가며 level2의 홈디렉토리 및 find로 level2 관련 파일들을 찾으려고 했으나 없었다.
그러다 shell Script 라면 첫번째 명령에 $0 = /bin/bash가 들어가있지 않나 추측.
$0을 삽입하니, my-pass 명령어가 먹혔다. 답 나왔다.


답 == hacker or cracker





#================================================================================#
#FTZ Level 2
hint) 텍스트 파일 편집 중 쉘의 명령을 실행시킬 수 있다는데...

#FTZ Level 2 풀이 과정)

힌트가 매우 불친절하다는 것을 느꼈다. 텍스트 파일 편집 중 쉘의 명령을 실행시킬 수 있다.
vi가 바로 떠올랐다.
그래서 home/level2 디렉토리에서 vi text.txt 을 실행했다.
근데 살짝 곤란한게, ex명령어를 이용할 수도 있고, shell을 실행시켜서 새롭게 쉘을 열수도있다. 문제는, 그래도 level2의 권한이라는 것이다.
진짜 여기서 매우 불친절하다는 것을 느꼈지만 별 수 있나. 뻘짓을 어느 정도 했을 때 level3 관련 파일을 찾아보자 하여,
find / -user 3003 2> /dev/null 로 level3 관련 파일을 찾았다. (id level3 하면 대상 id가 나온다. -user level3 로 해도 무관)
/usr/bin/editor 이란 결과.
잉? 다른 에디터가 있나? 싶어서 들어가서 봤더니,
setuid가 걸린 파일이었다. 실행권한이 있어 실행시켰더니 vim이 켜진다!!!
명령어 모드에서 shell을 쳐서 level3의 쉘로 진입. my-pass 로 다음 비밀번호를 얻어냈다.


답 == can you fly?





#================================================================================#
#FTZ Level 3
hint) 다음 코드는 autodig의 소스이다.

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
 
int main(int argc, char **argv){ 
 
    char cmd[100];
 
    if( argc!=2 ){
        printf( "Auto Digger Version 0.9\n" );
        printf( "Usage : %s host\n", argv[0] );
        exit(0);
    }
 
    strcpy( cmd, "dig @" );
    strcat( cmd, argv[1] );
    strcat( cmd, " version.bind chaos txt");
 
    system( cmd );
 
}

이를 이용하여 level4의 권한을 얻어라.

more hints.
- 동시에 여러 명령어를 사용하려면?
- 문자열 형태로 명령어를 전달하려면?

###########################################################

#FTZ Level 3 풀이 과정)
당황스럽게도 c언어 코드가 나왔다. 
stdio.h = C 언어의 표준 라이브러리 함수의 매크로 정의, 상수, 여러 형의 입출력 함수가 포함된 헤더 파일. (표준 입출력 라이브러리-standard input output libary)
stdlib.h = C 언어의 표준 라이브러리로, 문자열 변환, 사 난수 생성, 동적 메모리 관리 등의 함수들을 포함한다.
unistd.h = 유닉스에서 사용하는 C 컴파일러 헤더파일, window에서는 사용하지 않음.

라는 정보를 찾을 수 있었고, 이제 위의 코드를 이용하여 권한을 얻으라 했으니 사용한 함수에 대해 정보를 조사해야했다.
strcpy = String copy로 보인다. 찾아보니 맞다. 문자열을 복사하는 함수다.
         strcpy(대상문자열 , 원본 문자열) return *대상문자열

strcat = String Concatanate, 문자열을 붙이는 함수!
         strcat(최종문자열, 붙일 문자열) return *최종문자열

system = 명령어를 수행하는 함수.

dig = Domain Information Groper의 약자, 네임서버로부터 정보를 가져오는 툴.

그래서 코드를 확인해보면 argv[1]인자를 우리가 넣어줘야한다. /tmp/3이라는 디렉토리를 만들어서 vi a.c -> gcc a.c 후 ./a.out "ip;whoami;" 라고 진행했으나, 실패.
find로 -user level4 로 검색해보니 autodig가 있었다... 뻘쭘
해당 디렉토리로 이동후 ./autodig "ip;my-pass" 하니까 비밀번호가 나왔다.

답 == suck my brain
