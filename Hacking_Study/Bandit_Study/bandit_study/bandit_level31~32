#Bandit Level 30 → Level 31 풀이 과정)
위에 복사는 과정까지는 모두 같다. 이번에 READMD.md 는 빈 파일이었다.
branch도 확인해보니 하나뿐이었다.
로그도 뒤져보고 branch도 뒤져봤다. 그러다가 아까 봤던 packed-refs파일을 열어보니

# pack-refs with: peeled fully-peeled 
3aefa229469b7ba1cc08203e5d8fa299354c496b refs/remotes/origin/master
f17132340e8ee6c159e0a4a6bc6f80e1da3b1aea refs/tags/secret

밑에 refs/tags/secret 가 나왔다. 이름이 비밀이어서 숨겨진 브랜치인가? 생각해 tree에서 checkout 해봤으나 아니었다.
뭐지? 생각하다가 git tag명령어를 쳐봤더니 있었다. 
git에서 태그를 사용하는 이유는
운영 및 배포에서 매우 편리하게 사용할 수 있기 때문이고, 태그명을 배포버전으로 정하고 간략한 정보를 함께 저장하면 , 태그를 사용해 원하는 태그로 돌아갈 수 있는 효과가 있기 때문이다.
라고 이해했다.
오케이, 그럼 저 태그를 까봐야겠구나. 
git tag로 태그를 확인했더니 secret이 있다.
git show secret으로 읽었더니 답이 나왔다.
나중에 알게 된 사실이지만 git은 SHA 값을 찾을 때 먼저 refs에서 찾고 없으면 packed-refs 파일을 조회한다고한다.


답 == 47e603bb428404d265f59c42920d81e5




#Bandit Level 31 → Level 32
Level Goal)
-There is a git repository at ssh://bandit31-git@localhost/home/bandit31-git/repo. The password for the user bandit31-git is the same as for the user bandit31.

-Clone the repository and find the password for the next level.

Commands you may need to solve this level)
-git

#Bandit Level 31 → Level 32 풀이 과정)
복사과정은 똑같다. README.md 를 읽어보면
 This time your task is to push a file to the remote repository.

Details:
    File name: key.txt
    Content: 'May I come in?'
    Branch: master

이란 내용이 나오는데. 저것을 추가하고 보내면 된다.
Visual studio로 깃헙에 올리는 과정을 보면 파일을 추가하고 작성한다음 변경 내용을 적고 동기화 하여 push 하는 과정이 있다.
vi key.txt ->
May I come in?
git add key.txt
하면 오류가 뜨는데 .gitignore 파일 때문이다. vi로 수정해서 해당 텍스트 파일을 거부할 수 없게 만들던가 
git add key.txt -f 를 해서 무시하던가 둘중 하나를 택하면 좋다.
하고 난뒤 git commit -m "May I come in?" 했다. m으로 메세지를 저장할 수 있다고 해서 혹시 몰라 저장했다.
변경사항까지 간단하게 메모 했겠다 이제 push만 하면 정상 업로드가 가능하다.
그럼 답이 돌아온다.

답 == 56a9bf19c63d650ce78e6ec0354ee45e




이렇게 해서 Bandit의 내용은 끝났다. bandit은 해킹이라기보단 Linux의 관리자 차원에서 명령어를 익히고,
리눅스의 작동원리에 대해서 알아보는 시간이라고 하더라. 그래보이긴 했다. 큰 어려움이 없이 명령어를 알면 풀리는 문제들이었으니까.
다음 Level은 FTZ에서 Level 1~ 20까지 도전해볼 것이다.