#Bandit Level 10 → Level 11
Level Goal)
-The password for the next level is stored in the file data.txt, which contains base64 encoded data

Commands you may need to solve this level)
-grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd

Helpful Reading Material)
-Base64 on Wikipedia

#Bandit Level 10 → Level 11 풀이 과정)
base64로 인코딩 되었다면 base64로 디코딩하면 된다. 해당 명령어를 검색해보니 --encode , --decode로
인디코딩이 가능.
cat data.txt |base64 --decode
이라 하니 VGhlIHBhc3N3b3JkIGlzIElGdWt3S0dzRlc4TU9xM0lSRnFyeEUxaHhUTkViVVBSCg==
가
The password is IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR로 디코딩.

답 ==  IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR








#Bandit Level 11 → Level 12
Level Goal)
-The password for the next level is stored in the file data.txt, where all lowercase (a-z) and uppercase (A-Z) letters have been rotated by 13 positions

Commands you may need to solve this level)
-grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd

Helpful Reading Material)
-Rot13 on Wikipedia

#Bandit Level 11 → Level 12 풀이 과정)
cat data.txt를 해보니
Gur cnffjbeq vf 5Gr8L4qetPEsPk8htqjhRK8XSP6x2RHh
가 나왔다.

Rot13이 무엇인가?를 알아야 풀 수 있는 문제였다.
구글에 검색해보니 단순한 카이사르 암호의 일종으로 영어 알파벳을 13글자씩 밀어서 만든다고 한다.
tr(transliterte의 약자)라는 표준 유틸리티를 지원한다고 하니, 적용해봤다.
cat data.txt | tr 'A-Za-z' 'N-ZA-Mn-za-m'
을 적용하니 답이 바로 나왔다. rot의 사용법은 위키백과나 블로그에 tr 뒤의 문자들을 확인할 수 있어 딱히..
외울 필요는 없어보인다. 다만 ROT13이라는 간단한 암호화도 확인해볼 필요가 있다고 생각된다.
그래도 분석해보자면 대문자 A는 N이 되고, Z까지, A부터 N뒤인 M까지 변환하고, 소문자도 마찬가지로 한다.


The password is 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu


답 == 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu
